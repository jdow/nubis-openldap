#!/bin/bash
# During startup we need to elect a "leader" so that that host
# be the ldap sync server for the ldap slave

# Simple logging function
function log() {

    local LOGGER_BIN='/usr/bin/logger'
    local LOGMSG=$1

    [ -z "$LOGMSG" ] && { echo "Usage: $FUNCNAME [log message]"; exit 1; }

    # Set up the logger command if the binary is installed
    if [ ! -x $LOGGER_BIN ]; then
        # If logger is not installed just stderr it out
        echo "$LOGMSG"
    else
        $LOGGER_BIN --stderr --priority local7.info --tag ${BASH_SOURCE} "$LOGMSG"
    fi
}

eval $(curl -s -fq http://169.254.169.254/latest/user-data)
INSTANCE_ID=$(curl -s -fq http://169.254.169.254/latest/meta-data/instance-id)
REGION=$(curl -s -fq http://169.254.169.254/latest/dynamic/instance-identity/document | jq '.region' -r)
MY_IP=$(curl -s  -fq http://169.254.169.254/latest/meta-data/local-ipv4)
ENI_IP=$(aws ec2 describe-instances --instance-id ${INSTANCE_ID} --region ${REGION} --query "Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddresses[*].PrivateIpAddress" --output text | grep -v ${MY_IP})

/usr/local/bin/consul-do ${NUBIS_STACK}/${NUBIS_ENVIRONMENT} ${ENI_IP} || exit
log "Electing ${INSTANCE_ID} with ENI IP ${ENI_IP} as leader and creating a lock"
